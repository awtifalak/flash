services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      RESERVATION_TIMEOUT: 15
      PORT: 8080
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DB: sales
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - flashsale-net
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sales
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sales"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - flashsale-net
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - flashsale-net
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:

networks:
  flashsale-net: